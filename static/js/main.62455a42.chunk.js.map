{"version":3,"sources":["components/Board.js","components/WordInput.js","components/CloseIcon.js","components/ResetButton.js","App.js","index.js"],"names":["Tile","props","_useState","useState","_useState2","Object","slicedToArray","selected","setSelected","useEffect","undefined","console","log","valid","react_default","a","createElement","className","concat","style","cursor","isNeighbor","key","index","onClick","value","Board","from_x","Math","floor","col","from_y","to_x","to_y","maxWidth","data","map","Board_Tile","handleClick","WordInput","word","alignSelf","CloseIcon","xmlns","width","height","viewBox","fill","d","ResetButton","handleReset","components_CloseIcon","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateWindowDimensions","setState","window","innerWidth","innerHeight","generateBoard","size","board","characters","charactersLength","length","i","push","charAt","random","selectTile","_this$state","state","new_word","dictionary","words","includes","toLowerCase","wordReset","addEventListener","test_board","removeEventListener","_this$state2","components_ResetButton","src_components_Board","components_WordInput","Component","render","src_App_0","document","getElementById"],"mappings":"20BAIMA,SAAO,SAACC,GAAU,IAAAC,EACYC,oBAAS,GADrBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACbK,EADaH,EAAA,GACHI,EADGJ,EAAA,GAWpB,OARAK,oBAAU,gBACiBC,IAAnBT,EAAMM,UACNC,GAAY,KAIpBG,QAAQC,IAAIX,EAAMY,MAAON,GAAYN,EAAMY,OAGvCC,EAAAC,EAAAC,cAAA,OACIC,UAAS,aAAAC,OAAeX,GAAYN,EAAMY,MAAQ,SAAWN,IAAaN,EAAMY,MAAQ,WAAa,IACrGM,MAAO,CAACC,OAAM,GAAAF,OAAKjB,EAAMoB,aAAed,EAAW,UAAY,UAC/De,IAAKrB,EAAMsB,MACXC,QAAS,WACDvB,EAAMoB,aAAed,IACrBC,GAAY,GACZP,EAAMuB,QAAQvB,EAAMsB,UAI5BT,EAAAC,EAAAC,cAAA,SAAIf,EAAMwB,UAyCPC,EApCD,SAACzB,GACX,IAAMoB,EAAa,SAACE,GAChB,QAAuBb,IAAnBT,EAAMM,SAAwB,OAAO,EAEzC,IAAIoB,EAASC,KAAKC,MAAM5B,EAAMM,SAAWN,EAAM6B,KAC3CC,EAAS9B,EAAMM,SAAWN,EAAM6B,IAChCE,EAAOJ,KAAKC,MAAMN,EAAOtB,EAAM6B,KAC/BG,EAAOV,EAAQtB,EAAM6B,IAEzB,OAAKH,EAAS,GAAKK,GAAQA,GAAQL,EAAS,GAAOI,EAAS,GAAKE,GAAQA,GAAQF,EAAS,GAO9F,OACIjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBE,MAAO,CAACe,SAAQ,GAAAhB,OAAK,GAAYjB,EAAM6B,IAAvB,QAC3C7B,EAAMkC,KAAKC,IAAI,SAACX,EAAOF,GACrB,OACIT,EAAAC,EAAAC,cAACqB,EAAD,CACIZ,MAAOA,EACPJ,WAAYA,EAAWE,GACvBD,IAAKC,EACLA,MAAOA,EACPC,QAAS,kBAAMvB,EAAMqC,YAAYf,IACjChB,SAAUN,EAAMM,SAChBM,MAAOZ,EAAMY,YC1CtB0B,EAfG,SAACtC,GACf,OACIa,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAS,QAAAC,OAAUjB,EAAMY,MAAQ,aAAe,iBAAmBZ,EAAMuC,MAC5E1B,EAAAC,EAAAC,cAAA,OAAKG,MAAO,CAACsB,UAAW,WACJ,KAAfxC,EAAMuC,MACH1B,EAAAC,EAAAC,cAAA,KAAGC,UAAWhB,EAAMY,MAAQ,cAAgB,iBACtCZ,EAAMY,MAAQ,QAAU,cCInC6B,EAXG,WACd,OACI5B,EAAAC,EAAAC,cAAA,OAAK2B,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,QACpFjC,EAAAC,EAAAC,cAAA,QACIgC,EAAE,wLAEFD,KAAK,cCUNE,SAZK,SAAChD,GACjB,OACIa,EAAAC,EAAAC,cAAA,OACIC,UAAU,eACVO,QAASvB,EAAMiD,aAEfpC,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACmC,EAAD,+BCyGGC,cA3GX,SAAAA,EAAYnD,GAAO,IAAAoD,EAAA,OAAAhD,OAAAiD,EAAA,EAAAjD,CAAAkD,KAAAH,IACfC,EAAAhD,OAAAmD,EAAA,EAAAnD,CAAAkD,KAAAlD,OAAAoD,EAAA,EAAApD,CAAA+C,GAAAM,KAAAH,KAAMtD,KA8BV0D,uBAAyB,WACrBN,EAAKO,SAAS,CAAEhB,MAAOiB,OAAOC,WAAYjB,OAAQgB,OAAOE,eAhC1CV,EAmCnBW,cAAgB,SAACC,GAKb,IAJA,IAAIC,EAAQ,GACRC,EAAa,kCACbC,EAAmBD,EAAWE,OAEzBC,EAAI,EAAGA,EAAIL,EAAMK,IACtBJ,EAAMK,KAAKJ,EAAWK,OAAO5C,KAAKC,MAAMD,KAAK6C,SAAWL,KAG5D,OAAOF,GA5CQb,EA+CnBqB,WAAa,SAACnD,GAAU,IAAAoD,EACItB,EAAKuB,MAArBpC,EADYmC,EACZnC,KAAM0B,EADMS,EACNT,MACRW,EAAWrC,EAAKtB,OAAOgD,EAAM3C,IAEnC8B,EAAKO,SAAS,CACVpB,KAAMqC,EACNhE,MAAOiE,EAAWC,MAAMC,SAASH,EAASI,eAC1C1E,SAAUgB,KAtDC8B,EA0DnB6B,UAAY,WACR7B,EAAKO,SAAS,CACVpB,KAAM,GACN3B,WAAOH,EACPH,cAAUG,KA3Dd2C,EAAKuB,MAAQ,CACTV,MAAO,GACPrD,WAAOH,EACPH,cAAUG,EACV8B,KAAM,GAENI,MAAO,EACPC,OAAQ,GAVGQ,mFAgBfE,KAAKI,yBACLE,OAAOsB,iBAAiB,SAAU5B,KAAKI,wBAEvCJ,KAAKK,SAAS,CAIVM,MAAOkB,EAAWlB,uDAKtBL,OAAOwB,oBAAoB,SAAU9B,KAAKI,yDAsCpC,IAAA2B,EAC0C/B,KAAKqB,MAA7CV,EADFoB,EACEpB,MAAO3D,EADT+E,EACS/E,SAAUiC,EADnB8C,EACmB9C,KAAM3B,EADzByE,EACyBzE,MAAO+B,EADhC0C,EACgC1C,MAEtC,OACI9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACV2B,GAAS,KACN9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAACuE,EAAD,CACIrC,YAAaK,KAAK2B,aAI9BpE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACwE,EAAD,CACI1D,IAAK,EACLK,KAAM+B,EACN3D,SAAUA,EACVM,MAAOA,EACPyB,YAAaiB,KAAKmB,cAG1B5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACV2B,EAAQ,KACL9B,EAAAC,EAAAC,cAACuE,EAAD,CACIrC,YAAaK,KAAK2B,YAI1BpE,EAAAC,EAAAC,cAACyE,EAAD,CACIjD,KAAMA,EACN3B,MAAOA,cAlGjB6E,aCLlBC,iBACI7E,EAAAC,EAAAC,cAAC4E,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.62455a42.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport './Board.css';\n\nconst Tile = (props) => {\n    const [selected, setSelected] = useState(false);\n\n    useEffect(() => {\n        if (props.selected === undefined) {\n            setSelected(false);\n        }\n    })\n\n    console.log(props.valid, selected && props.valid)\n\n    return (\n        <div\n            className={`tile item ${selected && props.valid ? 'active' : selected && !props.valid ? 'selected' : ''}`}\n            style={{cursor: `${props.isNeighbor && !selected ? 'pointer' : 'unset'}`}}\n            key={props.index}\n            onClick={() => {\n                if (props.isNeighbor && !selected) {\n                    setSelected(true);\n                    props.onClick(props.index);\n                }\n            }}\n        >\n            <p>{props.value}</p>\n        </div>\n    )\n};\n\nconst Board = (props) => {\n    const isNeighbor = (index) => {\n        if (props.selected === undefined) return true;\n\n        var from_x = Math.floor(props.selected / props.col);\n        var from_y = props.selected % props.col;\n        var to_x = Math.floor(index/ props.col);\n        var to_y = index % props.col;\n\n        if ((from_x - 1 <= to_x && to_x <= from_x + 1) && (from_y - 1 <= to_y && to_y <= from_y + 1)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    return (\n        <div className=\"board-container\" style={{maxWidth: `${(78 + 10) * props.col}px`}}>\n            { props.data.map((value, index) => {\n                return (\n                    <Tile\n                        value={value}\n                        isNeighbor={isNeighbor(index)}\n                        key={index}\n                        index={index}\n                        onClick={() => props.handleClick(index)}\n                        selected={props.selected}\n                        valid={props.valid}\n                    />\n                )\n            })}\n\n        </div>\n    );\n}\n\nexport default Board;","import React from 'react';\n\nconst WordInput = (props) => {\n    return (\n        <div className=\"input-container\">\n            <p className={`word ${props.valid ? 'word-valid' : 'word-invalid'}`}>{props.word}</p>\n            <div style={{alignSelf: 'center'}}>\n                {props.word !== '' && (\n                    <p className={props.valid ? 'input-valid' : 'input-invalid'}>\n                        { props.valid ? 'valid' : 'invalid' }\n                    </p>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default WordInput;","import React from 'react';\n\nconst CloseIcon = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"38\" height=\"38\" viewBox=\"0 0 30 30\" fill=\"none\">\n            <path \n                d=\"M14 0C6.2 0 0 6.2 0 14C0 21.8 6.2 28 14 28C21.8 28 28 21.8 28 14C28 6.2 21.8 0 14 0ZM20.4\n                    22L14 15.6L7.6 22L6 20.4L12.4 14L6 7.6L7.6 6L14 12.4L20.4 6L22 7.6L15.6 14L22 20.4L20.4 22Z\" \n                fill=\"#D8D8D8\"/>\n        </svg>\n    )   \n}\n\nexport default CloseIcon;","import React from 'react';\n\nimport CloseIcon from './CloseIcon';\n\nimport './WordInput.css'\n\nconst ResetButton = (props) => {\n    return (\n        <div\n            className=\"reset-button\"\n            onClick={props.handleReset}\n        >\n            <p>clear word</p>\n            <CloseIcon />\n        </div>\n    )\n}\n\nexport default ResetButton;","import React, { Component } from 'react';\n\nimport Board from './components/Board';\nimport WordInput from './components/WordInput';\nimport ResetButton from './components/ResetButton';\n\nimport './App.css';\nimport dictionary from './assets/dictionary.json';\nimport test_board from './assets/test-board-2.json';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            board: [],\n            valid: undefined,\n            selected: undefined,\n            word: '',\n\n            width: 0,\n            height: 0\n        }\n    }\n\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n\n        this.setState({\n            //board: this.generateBoard(16)\n\n            //generate board from file\n            board: test_board.board \n        });\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n    \n    updateWindowDimensions = () => {\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\n    }    \n\n    generateBoard = (size) => {\n        let board = [];\n        var characters = 'AABCDEEFGHIIJKLMNOOPQRSTUUVWXYZ';\n        var charactersLength = characters.length;\n\n        for (var i = 0; i < size; i++) {\n            board.push(characters.charAt(Math.floor(Math.random() * charactersLength)));\n        }\n        \n        return board;\n    }\n\n    selectTile = (index) => {\n        const { word, board } = this.state;\n        const new_word = word.concat(board[index]);\n\n        this.setState({\n            word: new_word,\n            valid: dictionary.words.includes(new_word.toLowerCase()),\n            selected: index\n        });\n    }\n\n    wordReset = () => {\n        this.setState({\n            word: '',\n            valid: undefined,\n            selected: undefined\n        })\n    }\n\n    render () {\n        const { board, selected, word, valid, width } = this.state;\n\n        return (\n            <div className=\"global-container\">\n                <div className=\"inner-container\">\n                    {width <= 768 && (\n                        <div className=\"sz-3\">\n                            <ResetButton\n                                handleReset={this.wordReset}\n                            />\n                        </div>\n                    )}\n                    <div className=\"item sz-1\">\n                        <Board\n                            col={4}\n                            data={board}\n                            selected={selected}\n                            valid={valid}\n                            handleClick={this.selectTile}\n                        />\n                    </div>\n                    <div className=\"item sz-2 container-2\">\n                        {width > 768 && (\n                            <ResetButton\n                                handleReset={this.wordReset}\n                            />\n                        )}\n\n                        <WordInput\n                            word={word}\n                            valid={valid}\n                        />\n                    </div>\n                </div>\n                \n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport { render } from 'react-dom';\n\nimport App from './App';\n\nrender(\n    <App />,\n    document.getElementById('app')\n);"],"sourceRoot":""}