{"version":3,"sources":["components/Board.js","components/WordInput.js","components/CloseIcon.js","components/ResetButton.js","App.js","index.js"],"names":["Tile","props","_useState","useState","_useState2","Object","slicedToArray","selected","setSelected","useEffect","undefined","react_default","a","createElement","className","concat","isMobile","valid","style","cursor","isNeighbor","key","index","onClick","value","Board","from_x","Math","floor","col","from_y","to_x","to_y","maxWidth","data","map","Board_Tile","handleClick","WordInput","console","log","word","alignSelf","CloseIcon","xmlns","width","height","viewBox","fill","d","ResetButton","handleReset","components_CloseIcon","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateWindowDimensions","setState","window","innerWidth","innerHeight","generateBoard","size","board","characters","charactersLength","length","i","push","charAt","random","selectTile","_this$state","state","new_word","dictionary","words","includes","toLowerCase","wordReset","addEventListener","test_board","removeEventListener","_this$state2","components_ResetButton","src_components_Board","isBrowser","components_WordInput","Component","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.bc349b57.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { isMobile } from 'react-device-detect';\n\nimport './Board.css';\n\nconst Tile = (props) => {\n    const [selected, setSelected] = useState(false);\n\n    useEffect(() => {\n        if (props.selected === undefined) {\n            setSelected(false);\n        }\n    })\n\n    return (\n        <div\n            className={`${isMobile ? 'item-m' : 'item'} tile ${selected && props.valid ? 'active' : selected && !props.valid ? 'selected' : ''}`}\n            style={{cursor: `${props.isNeighbor && !selected ? 'pointer' : 'unset'}`}}\n            key={props.index}\n            onClick={() => {\n                if (props.isNeighbor && !selected) {\n                    setSelected(true);\n                    props.onClick(props.index);\n                }\n            }}\n        >\n            <p>{props.value}</p>\n        </div>\n    )\n};\n\nconst Board = (props) => {\n    const isNeighbor = (index) => {\n        if (props.selected === undefined) return true;\n\n        var from_x = Math.floor(props.selected / props.col);\n        var from_y = props.selected % props.col;\n        var to_x = Math.floor(index/ props.col);\n        var to_y = index % props.col;\n\n        if ((from_x - 1 <= to_x && to_x <= from_x + 1) && (from_y - 1 <= to_y && to_y <= from_y + 1)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    return (\n        <div className=\"board-container\" style={isMobile ? {maxWidth: `${(200 + 20) * props.col}px`} : {maxWidth: `${(78 + 10) * props.col}px`}}>\n            { props.data.map((value, index) => {\n                return (\n                    <Tile\n                        value={value}\n                        isNeighbor={isNeighbor(index)}\n                        key={index}\n                        index={index}\n                        onClick={() => props.handleClick(index)}\n                        selected={props.selected}\n                        valid={props.valid}\n                    />\n                )\n            })}\n\n        </div>\n    );\n}\n\nexport default Board;","import React from 'react';\nimport { isMobile } from 'react-device-detect';\n\nconst WordInput = (props) => {\n\n    console.log(isMobile)\n    return (\n        <div className={`${isMobile ? 'i-c-m' : 'input-container'}`}>\n            <p className={`${isMobile ? 'word-m' : 'word'} ${props.valid ? 'word-valid' : 'word-invalid'}`}>{props.word}</p>\n            <div style={{alignSelf: 'center'}}>\n                {props.word !== '' && (\n                    <p className={props.valid ? 'input-valid' : 'input-invalid'}>\n                        { props.valid ? 'valid' : 'invalid' }\n                    </p>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default WordInput;","import React from 'react';\n\nconst CloseIcon = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"38\" height=\"38\" viewBox=\"0 0 30 30\" fill=\"none\">\n            <path \n                d=\"M14 0C6.2 0 0 6.2 0 14C0 21.8 6.2 28 14 28C21.8 28 28 21.8 28 14C28 6.2 21.8 0 14 0ZM20.4\n                    22L14 15.6L7.6 22L6 20.4L12.4 14L6 7.6L7.6 6L14 12.4L20.4 6L22 7.6L15.6 14L22 20.4L20.4 22Z\" \n                fill=\"#D8D8D8\"/>\n        </svg>\n    )   \n}\n\nexport default CloseIcon;","import React from 'react';\n\nimport CloseIcon from './CloseIcon';\n\nimport './WordInput.css'\n\nconst ResetButton = (props) => {\n    return (\n        <div\n            className=\"reset-button\"\n            onClick={props.handleReset}\n        >\n            <p>clear word</p>\n            <CloseIcon />\n        </div>\n    )\n}\n\nexport default ResetButton;","import React, { Component } from 'react';\nimport { isBrowser, isMobile } from 'react-device-detect';\n\nimport Board from './components/Board';\nimport WordInput from './components/WordInput';\nimport ResetButton from './components/ResetButton';\n\nimport './App.css';\nimport dictionary from './assets/dictionary.json';\nimport test_board from './assets/test-board-2.json';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            board: [],\n            valid: undefined,\n            selected: undefined,\n            word: '',\n\n            width: 0,\n            height: 0\n        }\n    }\n\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n\n        this.setState({\n            //board: this.generateBoard(16)\n\n            //generate board from file\n            board: test_board.board \n        });\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n    \n    updateWindowDimensions = () => {\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\n    }    \n\n    generateBoard = (size) => {\n        let board = [];\n        var characters = 'AABCDEEFGHIIJKLMNOOPQRSTUUVWXYZ';\n        var charactersLength = characters.length;\n\n        for (var i = 0; i < size; i++) {\n            board.push(characters.charAt(Math.floor(Math.random() * charactersLength)));\n        }\n        \n        return board;\n    }\n\n    selectTile = (index) => {\n        const { word, board } = this.state;\n        const new_word = word.concat(board[index]);\n\n        this.setState({\n            word: new_word,\n            valid: dictionary.words.includes(new_word.toLowerCase()),\n            selected: index\n        });\n    }\n\n    wordReset = () => {\n        this.setState({\n            word: '',\n            valid: undefined,\n            selected: undefined\n        })\n    }\n\n    render () {\n        const { board, selected, word, valid, width } = this.state;\n\n        return (\n            <div className={`${isMobile ? 'global-container-mobile' : 'global-container'}`}>\n                <div className={`${isMobile ? 'mobile-container' : 'inner-container'}`}>\n                    {(width <= 768 || isMobile) && (\n                        <div className={`${isMobile ? 'sz-3-mobile' : 'sz-3'}`}>\n                            <ResetButton\n                                handleReset={this.wordReset}\n                            />\n                        </div>\n                    )}\n                    <div className={`${isMobile ? \"item-mobile sz-1-m\": \"item sz-1\"}`}>\n                        <Board\n                            col={4}\n                            data={board}\n                            selected={selected}\n                            valid={valid}\n                            handleClick={this.selectTile}\n                        />\n                    </div>\n                    <div className={`${isMobile ? \"item-mobile sz-2-m cont-2\": \"item sz-2 container-2\"}`}>\n                        {(width > 768 && isBrowser) && (\n                            <ResetButton\n                                handleReset={this.wordReset}\n                            />\n                        )}\n\n                        <WordInput\n                            word={word}\n                            valid={valid}\n                        />\n                    </div>\n                </div>\n                \n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport { render } from 'react-dom';\n\nimport App from './App';\n\nrender(\n    <App />,\n    document.getElementById('app')\n);"],"sourceRoot":""}